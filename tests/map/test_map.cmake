include(cmake_test/cmake_test)

ct_add_test(NAME [[test_cpp_map]])
function("${CMAKETEST_TEST}")
    include(cmakepp_lang/map/map)

    ct_add_section(NAME [[append]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(APPEND "${a_map}" foo 42)
        cpp_map(CTOR corr foo bar)
        cpp_map_append("${corr}" foo 42)
        cpp_map_equal("${corr}" result "${a_map}")
        ct_assert_equal(result TRUE)
    endfunction()

    ct_add_section(NAME [[copy]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(COPY "${a_map}" other)
        cpp_map_equal("${other}" result "${a_map}")
        ct_assert_equal(result TRUE)
    endfunction()

    ct_add_section(NAME [[ctor]])
    function("${CMAKETEST_SECTION}")
        ct_add_section(NAME [[no_initial_state]])
        function("${CMAKETEST_SECTION}")
            cpp_map(CTOR a_map)
            cpp_map_ctor(corr)
            cpp_map_equal("${a_map}" result "${corr}")
            ct_assert_equal(result TRUE)
        endfunction()

        ct_add_section(NAME [[with_initial_state]])
        function("${CMAKETEST_SECTION}")
            cpp_map(CTOR a_map foo bar)
            cpp_map_ctor(corr foo bar)
            cpp_map_equal("${a_map}" result "${corr}")
            ct_assert_equal(result TRUE)
        endfunction()
    endfunction()

    ct_add_section(NAME [[equal]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(CTOR other)
        cpp_map(EQUAL "${a_map}" result "${other}")
        ct_assert_equal(result FALSE)
    endfunction()

    ct_add_section(NAME [[get]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(GET "${a_map}" result foo)
        ct_assert_equal(result bar)
    endfunction()

    ct_add_section(NAME [[has_key]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(HAS_KEY "${a_map}" result foo)
        ct_assert_equal(result TRUE)
    endfunction()

    ct_add_section(NAME [[has_key_special]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map [[foo with $pecial ch&rs]] bar)
        cpp_map(HAS_KEY "${a_map}" result [[foo with $pecial ch&rs]])
        ct_assert_equal(result TRUE)
    endfunction()

    ct_add_section(NAME [[keys]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(KEYS "${a_map}" map_keys)
        ct_assert_equal(map_keys foo)
    endfunction()

    ct_add_section(NAME [[keys_special]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map [[foo with $pecial ch&rs]] bar)
        cpp_map(KEYS "${a_map}" map_keys)
        ct_assert_equal(map_keys [[foo with $pecial ch&rs]])
    endfunction()

    ct_add_section(NAME [[set]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(SET "${a_map}" foo 42)
        cpp_map(GET "${a_map}" result foo)
        ct_assert_equal(result 42)
    endfunction()

    ct_add_section(NAME [[set_special_val]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(SET "${a_map}" foo [[bar with $pecial ch&rs]])
        cpp_map(GET "${a_map}" result foo)
        ct_assert_equal(result [[bar with $pecial ch&rs]])
    endfunction()

    ct_add_section(NAME [[set_special_key]])
    function("${CMAKETEST_SECTION}")
        cpp_map(CTOR a_map foo bar)
        cpp_map(SET "${a_map}" [[foo with $pecial ch&rs]] 42)
        cpp_map(GET "${a_map}" result [[foo with $pecial ch&rs]])
        ct_assert_equal(result 42)
    endfunction()
endfunction()
